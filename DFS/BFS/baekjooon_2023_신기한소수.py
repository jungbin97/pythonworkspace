# ----------------------------------------------------------------------------
# [baekjoon_2023] 신기한 소수 
# ----------------------------------------------------------------------------
import math
# 자리수 
n = int(input())

def is_prime_number(x):
    for i in range(2, int(math.sqrt(x))+1):
        if x % i == 0:
            return False
    return True

def dfs(x):
    if len(str(x)) == n:
        print(x)
    else:
        for i in range(1, 10):
            if is_prime_number(x*10 + i):
                dfs(x*10 + i)
        
dfs(2)
dfs(3)
dfs(5)
dfs(7)


# 요약
# 수빈이는 소수가지고 노는 것이 취미 가장 좋아하는 소수는 7331이다.

# 7331은 소수인데 733도 소수, 73 소수, 7도 소수이다.
# 즉, 왼쪽 부터 1자리, 2자리, 3자리, 4자리 모두 소수인것

# N자리의 숫자 중에 어떤수들이 신기한 소수인지 찾아서 출력하라.

# # 풀이
# 1자리 소수는 2, 3, 5, 7만 가능하다. 따라서 
# 시작 숫자는 2, ,3, 5, 7
# 그이후에 자리수를 늘려가면서 소수인지 판별한다.